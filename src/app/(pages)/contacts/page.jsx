import Contacts from "@/screens/contacts/Contacts";

export async function generateMetadata({ params, searchParams }, parent) {
  // optionally access and extend (rather than replace) parent metadata
  const previousImages = (await parent).openGraph?.images || [];

  return {
    title: "–ö–æ–Ω—Ç–∞–∫—Ç–∏ Webevery | –ó–∞–º–æ–≤–∏—Ç–∏ –¥–∑–≤—ñ–Ω–æ–∫",
  description:
    "–•–æ—á–µ—Ç–µ —Å–∞–π—Ç - –ø–µ—Ä–µ—Ö–æ–¥—å—Ç–µ –∑–∞ –ø–æ—Å–∏–ª–∞–Ω–Ω—è–ºüì≤ –¥–µ –∑–º–æ–∂–µ—Ç–µ –ó–∞–º–æ–≤–∏—Ç–∏ –¥–∑–≤—ñ–Ω–æ–∫üëÜ—Ç–∞ –¥—ñ–∑–Ω–∞—î—Ç–µ—Å—å –Ω–∞—à—ñ –ö–æ–Ω—Ç–∞–∫—Ç–∏‚úÖ | –°–æ—Ü—ñ–∞–ª—å–Ω—ñ –º–µ—Ä–µ–∂—ñ‚ú®",
    openGraph: {
      images: [parent?.images, ...previousImages],
      type: "website",
      title: "–°—Ç–≤–æ—Ä–µ–Ω–Ω—è —Å–∞–π—Ç—ñ–≤ ‚Äî Webeveryüåç. –ö–æ–Ω—Ç–∞–∫—Ç–∏ —Å–∞–π—Ç—É",
      url: `${process.env.NEXT_PUBLIC_MAIN_URL}contacts`,
      description:
        "–°—Ç–≤–æ—Ä–µ–Ω–Ω—è —Å–∞–π—Ç—É ‚Äî Webeveryüåç. –†–æ–∑—Ä–æ–±–∫–∞ –ø—Ä–æ–≥—Ä–∞–º–Ω–æ–≥–æ –ø—Ä–æ–¥—É–∫—Ç—ÉüëÜ",
    },
    alternates: {
      canonical: `${process.env.NEXT_PUBLIC_MAIN_URL}contacts`,
    },
  };
}

const ContactsPage = () => {
    const jsonLd = {
    "@context": "http://schema.org",
    "@type": "BreadcrumbList",
    itemListElement: [
      {
        "@type": "ListItem",
        position: 1,
        item: {
          "@id": process.env.NEXT_PUBLIC_MAIN_URL,
          name: "–°—Ç–≤–æ—Ä–µ–Ω–Ω—è —Å–∞–π—Ç—É ‚Äî Webevery. –†–æ–∑—Ä–æ–±–∫–∞ –ø—Ä–æ–≥—Ä–∞–º–Ω–æ–≥–æ –ø—Ä–æ–¥—É–∫—Ç—É.",
        },
      },
      {
        "@type": "ListItem",
        position: 2,
        item: {
          "@id": `${process.env.NEXT_PUBLIC_MAIN_URL}contacts`,
          name: "–°—Ç–≤–æ—Ä–∏—Ç–∏ —Å–∞–π—Ç - Webevery. –ö–æ–Ω—Ç–∞–∫—Ç–∏ Webevery",
        },
      },
    ],
  };
    return (
        <>
        <script
        type="application/ld+json"
        dangerouslySetInnerHTML={{ __html: JSON.stringify(jsonLd) }}
        />
            <Contacts />
        </>
    );
};

export default ContactsPage;
