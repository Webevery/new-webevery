import Team from "@/screens/team/Team";

export async function generateMetadata({ params, searchParams }, parent) {
  // optionally access and extend (rather than replace) parent metadata
  const previousImages = (await parent).openGraph?.images || [];

  return {
    title: "–î–∞–≤–∞–π—Ç–µ –ø–æ–∑–Ω–∞–π–æ–º–∏–º–æ—Å—è Webevery | –í–µ–± —Å—Ç—É–¥—ñ—è",
  description:
    "–ö–æ–º–∞–Ω–¥–∞ Webevery –ø—Ä–∞—Ü—é—î –¥–ª—è –í–∞—Å —Ç–∞ –í–∞—à–æ–≥–æ –±—ñ–∑–Ω–µ—Å—ÉüëÜ –†–æ–∑—Ä–æ–±–∫–∞ —Å–∞–π—Ç—É üåç –í–∞—à –Ω–∞–¥—ñ–π–Ω–∏–π –ø–∞—Ä—Ç–Ω–µ—Ä —É —Ä–æ–∑—Ä–æ–±—Ü—ñ –≤–µ–±-—Å–∞–π—Ç—É üèÜ –ó–∞–º–æ–≤–∏—Ç–∏ –¥–∑–≤—ñ–Ω–æ–∫.",
    openGraph: {
      images: [parent?.images, ...previousImages],
      type: "website",
      title: "–°—Ç–≤–æ—Ä–µ–Ω–Ω—è —Å–∞–π—Ç—É ‚Äî Webeveryüåç –°—Ç–≤–æ—Ä–µ–Ω–Ω—è —Å–∞–π—Ç—ñ–≤üèÜ",
      url: `${process.env.NEXT_PUBLIC_MAIN_URL}team`,
      description:
        "–°—Ç–≤–æ—Ä–µ–Ω–Ω—è —Å–∞–π—Ç—É ‚Äî WebeveryüëÜ –†–æ–∑—Ä–æ–±–∫–∞ –ø—Ä–æ–≥—Ä–∞–º–Ω–æ–≥–æ –ø—Ä–æ–¥—É–∫—Ç—É‚úÖ",
    },
    alternates: {
      canonical: `${process.env.NEXT_PUBLIC_MAIN_URL}team`,
    },
  };
}

const TeamPage = () => {
    const jsonLd = {
    "@context": "http://schema.org",
    "@type": "BreadcrumbList",
    itemListElement: [
      {
        "@type": "ListItem",
        position: 1,
        item: {
          "@id": process.env.NEXT_PUBLIC_MAIN_URL,
          name: "–°—Ç–≤–æ—Ä–µ–Ω–Ω—è —Å–∞–π—Ç—É ‚Äî Webevery. –†–æ–∑—Ä–æ–±–∫–∞ –ø—Ä–æ–≥—Ä–∞–º–Ω–æ–≥–æ –ø—Ä–æ–¥—É–∫—Ç—É.",
        },
      },
      {
        "@type": "ListItem",
        position: 2,
        item: {
          "@id": `${process.env.NEXT_PUBLIC_MAIN_URL}team`,
          name: "–†–æ–∑—Ä–æ–±–∫–∞ —Å–∞–π—Ç—É - Webevery. –ö–æ–º–∞–Ω–¥–∞ Webevery",
        },
      },
    ],
  };
    return (
        <>
        <script
        type="application/ld+json"
        dangerouslySetInnerHTML={{ __html: JSON.stringify(jsonLd) }}
        />
            <Team />
        </>
    );
};

export default TeamPage;
